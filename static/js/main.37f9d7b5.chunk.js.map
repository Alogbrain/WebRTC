{"version":3,"sources":["handler/MediaHandler.js","Component/input.js","Component/message-item.js","Component/message-list.js","Component/boxChat.js","App.js","serviceWorker.js","index.js","logo.svg","../node_modules/peerjs/dist sync"],"names":["MediaHandler","Promise","res","rej","navigator","mediaDevices","getUserMedia","video","audio","then","stream","catch","err","Error","React","Component","Input","e","keyCode","this","props","sendMessage","messageInput","className","ref","type","placeholder","onKeyUp","checkEnter","bind","onClick","inputMessage","App","user","id","src","alt","message","messages","map","item","key","userId","boxChat","state","socket","on","setState","console","log","response","newMessage","m","ids","_map","max","Math","push","data","objMessage","$","scrollHeight","scrollTop","clientHeight","animate","prop","value","emit","typing","sendnewMessage","hasMedia","arrPeer","idPeer","mediaHandler","peer","startPeer","Call","SignUp","ClickLi","io","getPermission","myVideo","srcObject","error","URL","createObjectURL","play","arrUserInfo","forEach","ten","peerId","alert","remove","Peer","userVideo","call","answer","remoteStream","val","username","i","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","module","exports","webpackEmptyContext","req","code","keys","resolve"],"mappings":"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","file":"static/js/main.37f9d7b5.chunk.js","sourcesContent":["import React from 'react'\r\nimport Peer from 'peerjs'\r\nimport $ from 'jquery'\r\nexport default class MediaHandler extends React.Component{\r\n    getPermission(){\r\n        return new Promise((res,rej) => {\r\n            navigator.mediaDevices.getUserMedia({video : true, audio : false})\r\n            .then(stream => {\r\n                res(stream);\r\n            })\r\n            .catch(err =>{\r\n                throw new Error('Unable to fetch stream ',err);\r\n            })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nexport default class Input extends React.Component{\r\n    checkEnter(e){\r\n        // console.log(e)\r\n        if(e.keyCode === 13){\r\n            this.props.sendMessage(this.messageInput);\r\n        }\r\n    } \r\n    render(){\r\n        return(\r\n            <div className=\"\">\r\n               <div className=\"bottom_wrapper\">\r\n                   <div  className=\"message_input_wrapper\">\r\n                        <input ref={(ref) => {this.messageInput = ref}} type=\"text\" className=\"message_input\" placeholder=\"Type your message here\" onKeyUp={this.checkEnter.bind(this)} />\r\n                   </div>\r\n                   <div className=\"send_message\" onClick={() => this.props.sendMessage(this.messageInput)} ref={(ref) => {this.inputMessage = ref}} >\r\n                        <div className='icon'></div>\r\n                        <div className='text'>Send</div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n        );\r\n    }\r\n}","import React from 'react'\r\n// import './item.scss'\r\nexport default class App extends React.Component{\r\n    render(){\r\n        return(\r\n            <li className={this.props.user  ? 'message right' : 'message left'}>\r\n                <div className=\"avatar\">\r\n                    <img id=\"img\" src=\"https://scontent.fsgn2-1.fna.fbcdn.net/v/t1.0-9/54424813_2104573432990181_6339272824389107712_n.jpg?_nc_cat=107&_nc_sid=85a577&_nc_ohc=DmUnk1hdXe4AX_owOcC&_nc_ht=scontent.fsgn2-1.fna&oh=dd6339d06d003b67e9c8d85136fee1f3&oe=5F0BBB9E\" alt=\"user\" />\r\n                </div>\r\n                <div className=\"text_wrapper\">\r\n                    <div className=\"box bg-light-info\">{this.props.message}</div>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Item from './message-item'\r\n// import './message-list.scss'\r\nexport default class App extends React.Component{\r\n    render () {\r\n        return (\r\n            <ul className=\"messages clo-md-5\">\r\n                {this.props.messages.map(item =>\r\n                    <Item key={item.userId} user={item.userId == this.props.user? true : false} message={item.message}/>\r\n                )}   \r\n            </ul>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport $ from 'jquery';\r\nimport _map from 'lodash/map';\r\nimport io from 'socket.io-client';\r\nimport Input from './input'\r\nimport Messages from './message-list'\r\nimport './component.css'\r\n// import './component.js'\r\nexport default class boxChat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: [],\r\n            user : null\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.props.socket.on('id', res => {\r\n            this.setState({ user: res })\r\n          });\r\n          console.log('Will mount'+ this.state.user)\r\n        this.props.socket.on('newMessage', (response) => { this.newMessage(response); })\r\n    }\r\n    newMessage(m) {\r\n        const messages = this.state.messages;\r\n        let ids = _map(messages, 'id');\r\n        let max = Math.max(...ids);\r\n        messages.push({\r\n            id: max + 1,\r\n            userId: m.id,\r\n            message: m.data\r\n        })\r\n\r\n        let objMessage = $('.messages');\r\n        if (objMessage[0].scrollHeight - objMessage[0].scrollTop === objMessage[0].clientHeight) {\r\n            this.setState({ messages });\r\n            objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 300);\r\n        } else {\r\n            this.setState({ messages });\r\n            if (m.id === this.state.user) {\r\n                objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 300);\r\n            }\r\n        }\r\n    }\r\n    sendnewMessage(m) {\r\n        if (m.value) {\r\n            this.props.socket.emit(\"newMessage\", m.value);\r\n            m.value = \"\";\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            this.state.user\r\n                ?<div className=\"app__content\">\r\n                    <div className=\"chat_window\">\r\n                        <Messages user={this.state.user} messages={this.state.messages} typing={this.state.typing} />\r\n                        <Input sendMessage={this.sendnewMessage.bind(this)} />\r\n                    </div>\r\n                </div> :null\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Peer from 'peerjs'\nimport $ from 'jquery'\nimport MediaHandler from './handler/MediaHandler.js'\nimport io from 'socket.io-client'\nimport BoxChat from './Component/boxChat'\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hasMedia: false,\n      // otherUserId: null,\n      arrPeer: [],\n      idPeer: null\n    }\n\n    this.mediaHandler = new MediaHandler();\n    this.socket = null;\n    this.peer = null;\n    this.startPeer = this.startPeer.bind(this)\n    this.Call = this.Call.bind(this)\n    this.SignUp = this.SignUp.bind(this)\n    this.ClickLi = this.ClickLi.bind(this)\n  }\n  componentDidMount() {\n      this.peer =this.startPeer();\n  }\n  componentWillMount() {\n    this.socket = io('https://webrtc9598.herokuapp.com/');\n    // this.socket = io('http://localhost:3000');\n    this.mediaHandler.getPermission()\n      .then(stream => {\n        this.setState({ hasMedia: true });\n        try {\n          this.myVideo.srcObject = stream;\n        } catch (error) {\n          this.myVideo.src = URL.createObjectURL(stream);\n        }\n        this.myVideo.play();\n      });\n\n      this.socket.on('DANG_SACH_ONLINE', arrUserInfo => {\n        arrUserInfo.forEach(user => {\n          const { ten, peerId } = user;\n            this.state.arrPeer.push(user);\n            this.setState({arrPeer : this.state.arrPeer})\n        });\n        this.socket.on('CO_NGUOI_DUNG_MOI', user => {\n          const { ten, peerId } = user;\n          this.state.arrPeer.push(user);\n          this.setState({arrPeer : this.state.arrPeer})\n        })\n      })\n    this.socket.on('DANG_KY_THAT_BAI', () => alert('username da ton tai!'));\n    this.socket.on('AI_DO_NGAT_KET_NOI', peerId => {\n      $('#' + peerId + '').remove();\n    });\n  }\n  startPeer() {\n    const peer = new Peer();\n    peer.on('open', id => {\n      this.setState({ idPeer: id });\n      console.log(id)\n    })\n    peer.on('stream', (stream) => {\n      try {\n        this.userVideo.srcObject = stream;\n      } catch (error) {\n        this.userVideo.src = URL.createObjectURL(stream);\n      }\n      this.userVideo.play();\n    })\n    peer.on('call', call => {\n      this.mediaHandler.getPermission()\n        .then(stream => {\n          call.answer(stream);\n          try {\n            this.myVideo.srcObject = stream;\n          } catch (error) {\n            this.myVideo.src = URL.createObjectURL(stream);\n          }\n          this.myVideo.play();\n          call.on('stream', remoteStream => {\n            try {\n              this.userVideo.srcObject = remoteStream;\n            } catch (error) {\n              this.userVideo.src = URL.createObjectURL(remoteStream);\n            }\n            this.userVideo.play();\n          })\n        })\n    }) \n    return peer;\n  }\n  Call() {\n    const id = $('#remoteId').val();\n    this.mediaHandler.getPermission()\n      .then(stream => {\n        try {\n          this.myVideo.srcObject = stream;\n        } catch (error) {\n          this.myVideo.src = URL.createObjectURL(stream);\n        }\n        this.myVideo.play();\n        const call = this.peer.call(id, stream);\n        call.on('stream', remoteStream => {\n          try {\n            this.userVideo.srcObject = remoteStream;\n          } catch (error) {\n            this.userVideo.src = URL.createObjectURL(remoteStream);\n          }\n          this.userVideo.play();\n        })\n      });\n  }\n  SignUp() {\n    const username = $('#txtUsername').val();\n    this.socket.emit('NGUOI_DUNG_DANG_KY', { ten: username, peerId: this.peer.id });\n  }\n  \n  ClickLi(id) {\n      this.mediaHandler.getPermission().then(stream => {\n        try {\n          this.myVideo.srcObject = stream;\n        } catch (error) {\n          this.myVideo.src = URL.createObjectURL(stream);\n        }\n        this.myVideo.play();\n        const call = this.peer.call(id, stream);\n        call.on('stream', remoteStream => {\n          try {\n            this.userVideo.srcObject = remoteStream;\n          } catch (error) {\n            this.userVideo.src = URL.createObjectURL(remoteStream);\n          }\n          this.userVideo.play();\n        })\n      });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <p>Online USer:</p>\n        <ul id=\"ulUser\"></ul>\n        {\n          this.state.arrPeer.map(i => <li id={i.peerId} key={i.peerId} onClick={()=>this.ClickLi(i.peerId)}>{i.ten}</li>)\n        }\n        <div className=\"video-container\">\n          <h3 id=\"my-peer\">ID : {this.state.idPeer}</h3>\n          <video className=\"my-video\" ref={(ref) => { this.myVideo = ref; }}></video>\n          <video className=\"user-video\" ref={(ref) => { this.userVideo = ref; }}></video>\n        </div>\n        <div>\n          <input type='text' id=\"remoteId\" placeholder=\"Remote ID\"></input>\n          <button id=\"btnCall\" onClick={this.Call}>Call</button>\n        </div>\n        <div>\n          <input type='text' id=\"txtUsername\" placeholder=\"Enter your username\"></input>\n          <button id=\"btnSignUp\" onClick={this.SignUp}>SignUp</button>\n        </div>\n        <BoxChat socket = {this.socket}/>\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 83;"],"sourceRoot":""}